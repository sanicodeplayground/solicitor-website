{"ast":null,"code":"import * as React from 'react';\nimport { useEventCallback } from '../utils';\nconst useTouchRipple = props => {\n  const {\n    disabled,\n    disableFocusRipple,\n    disableRipple,\n    disableTouchRipple,\n    focusVisible,\n    rippleRef\n  } = props;\n  React.useEffect(() => {\n    if (focusVisible && !disableFocusRipple && !disableRipple) {\n      var _rippleRef$current;\n      (_rippleRef$current = rippleRef.current) == null ? void 0 : _rippleRef$current.pulsate();\n    }\n  }, [rippleRef, focusVisible, disableFocusRipple, disableRipple]);\n  function useRippleHandler(rippleAction) {\n    let skipRippleAction = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : disableTouchRipple;\n    return useEventCallback(event => {\n      if (!skipRippleAction && rippleRef.current) {\n        rippleRef.current[rippleAction](event);\n      }\n      return true;\n    });\n  }\n  const keydownRef = React.useRef(false);\n  const handleKeyDown = useEventCallback(event => {\n    if (!disableFocusRipple && !keydownRef.current && focusVisible && rippleRef.current && event.key === ' ') {\n      keydownRef.current = true;\n      rippleRef.current.stop(event, () => {\n        var _rippleRef$current2;\n        rippleRef == null ? void 0 : (_rippleRef$current2 = rippleRef.current) == null ? void 0 : _rippleRef$current2.start(event);\n      });\n    }\n  });\n  const handleKeyUp = useEventCallback(event => {\n    // calling preventDefault in keyUp on a <button> will not dispatch a click event if Space is pressed\n    // https://codesandbox.io/s/button-keyup-preventdefault-dn7f0\n    if (!disableFocusRipple && event.key === ' ' && rippleRef.current && focusVisible && !event.defaultPrevented) {\n      keydownRef.current = false;\n      rippleRef.current.stop(event, () => {\n        var _rippleRef$current3;\n        rippleRef == null ? void 0 : (_rippleRef$current3 = rippleRef.current) == null ? void 0 : _rippleRef$current3.pulsate(event);\n      });\n    }\n  });\n  const handleBlur = useRippleHandler('stop', false);\n  const handleMouseDown = useRippleHandler('start');\n  const handleContextMenu = useRippleHandler('stop');\n  const handleDragLeave = useRippleHandler('stop');\n  const handleMouseUp = useRippleHandler('stop');\n  const handleMouseLeave = useRippleHandler('stop');\n  const handleTouchStart = useRippleHandler('start');\n  const handleTouchEnd = useRippleHandler('stop');\n  const handleTouchMove = useRippleHandler('stop');\n  const [mountedState, setMountedState] = React.useState(false);\n  React.useEffect(() => {\n    setMountedState(true);\n  }, []);\n  const enableTouchRipple = mountedState && !disableRipple && !disabled;\n  const getRippleHandlers = React.useMemo(() => {\n    const rippleHandlers = {\n      onBlur: handleBlur,\n      onKeyDown: handleKeyDown,\n      onKeyUp: handleKeyUp,\n      onMouseDown: handleMouseDown,\n      onMouseUp: handleMouseUp,\n      onMouseLeave: handleMouseLeave,\n      onContextMenu: handleContextMenu,\n      onDragLeave: handleDragLeave,\n      onTouchStart: handleTouchStart,\n      onTouchEnd: handleTouchEnd,\n      onTouchMove: handleTouchMove\n    };\n    return function () {\n      let otherEvents = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      const eventNames = Object.keys(rippleHandlers);\n      const wrappedEvents = eventNames.map(eventName => ({\n        name: eventName,\n        handler: ev => {\n          var _otherEvents$eventNam;\n          (_otherEvents$eventNam = otherEvents[eventName]) == null ? void 0 : _otherEvents$eventNam.call(otherEvents, ev);\n          rippleHandlers[eventName](ev);\n        }\n      }));\n      return wrappedEvents.reduce((acc, current) => {\n        acc[current.name] = current.handler;\n        return acc;\n      }, {});\n    };\n  }, [handleBlur, handleKeyDown, handleKeyUp, handleMouseDown, handleMouseUp, handleMouseLeave, handleContextMenu, handleDragLeave, handleTouchStart, handleTouchEnd, handleTouchMove]);\n  return {\n    enableTouchRipple,\n    getRippleHandlers\n  };\n};\nexport default useTouchRipple;","map":{"version":3,"names":["React","useEventCallback","useTouchRipple","props","disabled","disableFocusRipple","disableRipple","disableTouchRipple","focusVisible","rippleRef","useEffect","_rippleRef$current","current","pulsate","useRippleHandler","rippleAction","skipRippleAction","arguments","length","undefined","event","keydownRef","useRef","handleKeyDown","key","stop","_rippleRef$current2","start","handleKeyUp","defaultPrevented","_rippleRef$current3","handleBlur","handleMouseDown","handleContextMenu","handleDragLeave","handleMouseUp","handleMouseLeave","handleTouchStart","handleTouchEnd","handleTouchMove","mountedState","setMountedState","useState","enableTouchRipple","getRippleHandlers","useMemo","rippleHandlers","onBlur","onKeyDown","onKeyUp","onMouseDown","onMouseUp","onMouseLeave","onContextMenu","onDragLeave","onTouchStart","onTouchEnd","onTouchMove","otherEvents","eventNames","Object","keys","wrappedEvents","map","eventName","name","handler","ev","_otherEvents$eventNam","call","reduce","acc"],"sources":["/Users/romachine/Desktop/project1/website/node_modules/@mui/material/useTouchRipple/useTouchRipple.js"],"sourcesContent":["import * as React from 'react';\nimport { useEventCallback } from '../utils';\n\nconst useTouchRipple = props => {\n  const {\n    disabled,\n    disableFocusRipple,\n    disableRipple,\n    disableTouchRipple,\n    focusVisible,\n    rippleRef\n  } = props;\n  React.useEffect(() => {\n    if (focusVisible && !disableFocusRipple && !disableRipple) {\n      var _rippleRef$current;\n\n      (_rippleRef$current = rippleRef.current) == null ? void 0 : _rippleRef$current.pulsate();\n    }\n  }, [rippleRef, focusVisible, disableFocusRipple, disableRipple]);\n\n  function useRippleHandler(rippleAction, skipRippleAction = disableTouchRipple) {\n    return useEventCallback(event => {\n      if (!skipRippleAction && rippleRef.current) {\n        rippleRef.current[rippleAction](event);\n      }\n\n      return true;\n    });\n  }\n\n  const keydownRef = React.useRef(false);\n  const handleKeyDown = useEventCallback(event => {\n    if (!disableFocusRipple && !keydownRef.current && focusVisible && rippleRef.current && event.key === ' ') {\n      keydownRef.current = true;\n      rippleRef.current.stop(event, () => {\n        var _rippleRef$current2;\n\n        rippleRef == null ? void 0 : (_rippleRef$current2 = rippleRef.current) == null ? void 0 : _rippleRef$current2.start(event);\n      });\n    }\n  });\n  const handleKeyUp = useEventCallback(event => {\n    // calling preventDefault in keyUp on a <button> will not dispatch a click event if Space is pressed\n    // https://codesandbox.io/s/button-keyup-preventdefault-dn7f0\n    if (!disableFocusRipple && event.key === ' ' && rippleRef.current && focusVisible && !event.defaultPrevented) {\n      keydownRef.current = false;\n      rippleRef.current.stop(event, () => {\n        var _rippleRef$current3;\n\n        rippleRef == null ? void 0 : (_rippleRef$current3 = rippleRef.current) == null ? void 0 : _rippleRef$current3.pulsate(event);\n      });\n    }\n  });\n  const handleBlur = useRippleHandler('stop', false);\n  const handleMouseDown = useRippleHandler('start');\n  const handleContextMenu = useRippleHandler('stop');\n  const handleDragLeave = useRippleHandler('stop');\n  const handleMouseUp = useRippleHandler('stop');\n  const handleMouseLeave = useRippleHandler('stop');\n  const handleTouchStart = useRippleHandler('start');\n  const handleTouchEnd = useRippleHandler('stop');\n  const handleTouchMove = useRippleHandler('stop');\n  const [mountedState, setMountedState] = React.useState(false);\n  React.useEffect(() => {\n    setMountedState(true);\n  }, []);\n  const enableTouchRipple = mountedState && !disableRipple && !disabled;\n  const getRippleHandlers = React.useMemo(() => {\n    const rippleHandlers = {\n      onBlur: handleBlur,\n      onKeyDown: handleKeyDown,\n      onKeyUp: handleKeyUp,\n      onMouseDown: handleMouseDown,\n      onMouseUp: handleMouseUp,\n      onMouseLeave: handleMouseLeave,\n      onContextMenu: handleContextMenu,\n      onDragLeave: handleDragLeave,\n      onTouchStart: handleTouchStart,\n      onTouchEnd: handleTouchEnd,\n      onTouchMove: handleTouchMove\n    };\n    return (otherEvents = {}) => {\n      const eventNames = Object.keys(rippleHandlers);\n      const wrappedEvents = eventNames.map(eventName => ({\n        name: eventName,\n        handler: ev => {\n          var _otherEvents$eventNam;\n\n          (_otherEvents$eventNam = otherEvents[eventName]) == null ? void 0 : _otherEvents$eventNam.call(otherEvents, ev);\n          rippleHandlers[eventName](ev);\n        }\n      }));\n      return wrappedEvents.reduce((acc, current) => {\n        acc[current.name] = current.handler;\n        return acc;\n      }, {});\n    };\n  }, [handleBlur, handleKeyDown, handleKeyUp, handleMouseDown, handleMouseUp, handleMouseLeave, handleContextMenu, handleDragLeave, handleTouchStart, handleTouchEnd, handleTouchMove]);\n  return {\n    enableTouchRipple,\n    getRippleHandlers\n  };\n};\n\nexport default useTouchRipple;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}